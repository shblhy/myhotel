一、概况
本项目是应用django框架做的一个网站，数据库是mysql，前端广泛使用jquery ajax。
后端应用到的技术还有：
前端应用到的技术还有：

二、合作
通过svn进行源码管理
SVN地址：
账号：
密码：

三、环境
python环境搭建：参见E:\soft\python环境搭建  python 2.7.8 + django 1.7.1
网站

四、思想
这是一个小型站点，我们采用迅速简洁的开发模式。
1、在前后台分别通过对应的框架尽少重复代码，快速完成任务。
2、通过外键保证级联删除，非指定要求的删除动作不予进行还原。
3、对同一个内容的不同表现形式，尽可能使用一个方法进行处理。
4、查用get，改用post，一般不用同一个URL的get和post来实现不同功能。
5、认为一个问题只有一个解决办法，就是最好的那种。
6、尽可能符合规范利用规范，尽可能使用知名技术、控件，少自己去想去发明创造。
7、有关抽象层级，django的抽象度极高，高意味着快、灵活度下降及学习成本提升。我们的抽象层级定在model级别。即无需用同一个URL或者方法去完成多种model的管理。
8、实质上客户任务时限不急，并不用可以追求时间，但把控任务进度是任何项目必须的。
9、总结分析归纳框架，解决框架未考虑到的问题，使得以后更快，比完成这次任务更重要。

五、命名规范
通用
1、尽可能简洁的URL描述方式，一般为模块名+对象名+动作+id（模块名与对象名相同时省略一个），例如：/room/detail/1 表示1号房间详情，/room/edit/1 表示1号房间编辑，/room/add表达新增房间
2、POST动作操作数据，URL命名一般是模块名+动作+动作对象，如/room/edit_room表示提交编辑房间的数据
3、模块名、文件名一般用单数，列表用复数。
4、URL中同一个内容的不同数据组织形式，比如房间列表，可能有房间列表页面、房间列表表格、房间下拉框、房间多选框等，用模块名+对象名（复数）+控件名来表达，例如：
/room/rooms.table  /room/rooms.html   /room/rooms.select 等
后端
1、普通变量、方法以小写单词+下划线命名，类名驼峰且首字母大写，常量以大写单词+下划线命名。
2、在方法内部，与外部无关的变量以驼峰方式命名，以告知代码阅读者本变量与外界无关无需关注。
前端
~待添加


